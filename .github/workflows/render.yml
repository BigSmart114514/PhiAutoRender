name: Render PEZ File

on:
  push:
    branches:
      - main

jobs:
  render:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Download latest FFmpeg static build
        run: |
          wget https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz
          tar xJf ffmpeg-release-amd64-static.tar.xz
          sudo mv ffmpeg-*-static/ffmpeg /usr/local/bin/
          sudo mv ffmpeg-*-static/ffprobe /usr/local/bin/
          sudo chmod +x /usr/local/bin/ffmpeg /usr/local/bin/ffprobe

      - name: Verify FFmpeg version
        run: ffmpeg -version
        
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq xvfb alsa-utils libasound2-plugins pulseaudio

      - name: Configure PulseAudio with null sink
        run: |
          pulseaudio --kill || true
          pulseaudio --daemonize --exit-idle-time=-1 --log-level=4
          pactl load-module module-null-sink sink_name=dummy
          pactl set-default-sink dummy
          echo 'PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native' >> $GITHUB_ENV

      - name: Download and Install Phi-Recorder
        run: |
          LATEST_RELEASE_URL=$(curl -s https://api.github.com/repos/2278535805/Phi-Recorder/releases/latest | jq -r '.assets[] | select(.name | endswith("amd64.deb")) | .browser_download_url')
          wget "$LATEST_RELEASE_URL" -O phi-recorder.deb
          sudo apt-get install -y ./phi-recorder.deb

      - name: Prepare PEZ File
        run: |
          mkdir -p pez_files
          pez_file=$(find . -maxdepth 1 -name '*.pez' -print -quit)
          cp "$pez_file" "pez_files/$(basename "$pez_file")"
          echo "PEZ_BASENAME=$(basename "$pez_file")" >> $GITHUB_ENV

      - name: Render PEZ File using Xvfb
        run: |
          export SDL_AUDIODRIVER=pulse
          xvfb-run --auto-servernum --server-args="-screen 0 1280x720x24" \
            phi-recorder --render "pez_files/${PEZ_BASENAME}" --output ATRR.mp4

      - name: Upload Rendered Video
        uses: actions/upload-artifact@v4
        with:
          name: rendered-video
          path: ATRR.mp4
